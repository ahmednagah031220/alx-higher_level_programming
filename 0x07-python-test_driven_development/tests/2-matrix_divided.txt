Using the testcode file to test ``matrix_divided`` module
===========================================================

Using the import to import the module

	>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

Testing invalid name input in the function:

	>>> matrix_divided(none, 2)
	Traceback (most recent call last):
	...
	NameError: name 'none' is not defined

Testing the different lenghts matrix:

	>>> matrix_divided([[1, 2, 4], [1, 3]], 2)
	Traceback (most recent call last):
	...
	TypeError: Each row of the matrix must have the same size

Testing using normal matrix:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6], [7, 8, 9]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0], [2.33, 2.67, 3.0]]

Testing negative numbers:

	>>> matrix_divided([[-1, -2, 3], [1, -2, -3], [-1, -2, -3]], 3)
	[[-0.33, -0.67, 1.0], [0.33, -0.67, -1.0], [-0.33, -0.67, -1.0]]

Testing unmodified matrix:

	>>> m = [[2, 4, 8], [1, 2, 3]]
	>>> matrix_divided(m, 2)
	[[1.0, 2.0, 4.0], [0.5, 1.0, 1.5]]
	>>> m[1][0]
	1

Testing the division with infinity:

	>>> matrix_divided([[2, 4, 8], [1, 2, 3]], float("inf"))
	[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

Testing the empty list of lists:

	>>> matrix_divided([[]], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing wrong type of input:

	>>> matrix_divided([[1, "r", True], [2, 3, 4]], 2)
	Traceback (most recent call last):
	...
	TypeError: matrix must be a matrix (list of lists) of integers/floats

Testing division with zero:

	>>> matrix_divided([[2, 3, 4], [2, 94, 8]], 0)
	Traceback (most recent call last):
	...
	ZeroDivisionError: division by zero
